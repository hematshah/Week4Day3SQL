SELECT 'LETS CHOW PRODUCTS WITH CATEGORYID  (NO JOIN YET)'

SELECT * FROM Products

SELECT 'NOW LETS SEE IF WE CAN GET THE CATEGORY NAMEK ALSO'

SELECT * FROM Categories

SELECT ' SO FIELD IS CATEGORYNAME'
SELECT 'TRY INNER JOINS'

SELECT ProductName, CategoryName FROM Products P 
JOIN Categories C -- 'INNER JOIN' or 'JOIN' IS THE SAME
ON P.CategoryID = C.CategoryID


SELECT  CategoryName, ProductName FROM Products P 
INNER JOIN Categories C
ON P.CategoryID = C.CategoryID


SELECT ' LETS SEE IF WE CAN LIST ALL PRODUCTS GROUP BY CATREGORY NAME/ID'

SELECT  CategoryName, COUNT(ProductName) 'NUMBER OF PRODUCT' FROM Products P 
INNER JOIN Categories C
ON P.CategoryID = C.CategoryID
GROUP BY C.CategoryName

SELECT 'LETS REPEAT THIS FOR PRODUCTS BY SUPPLIERID'

SELECT  CompanyName, COUNT(ProductName) 'NUMBER OF PRODUCT' FROM Products P 
INNER JOIN Suppliers S
ON P.SupplierID = S.SupplierID
GROUP BY  S.CompanyName

--SELECT * FROM SYSDATABASES.FOREIGN_KEYS

SELECT 'LETS SEE IF WE CAN GET AVERAGE UNITS ON ORDER FOR EACH SUPPLIER IE
PRODUCTS.UNITONORDER AND AVERAGE THIS NY SUPPLIER'

SELECT * FROM Products
SELECT * FROM Suppliers

SELECT  CompanyName, AVG(UnitsOnOrder) ' AVERAGE NUMBER OF PRODUCT' FROM Products P 
INNER JOIN Suppliers S
ON P.SupplierID = S.SupplierID
GROUP BY CompanyName
HAVING avg(UnitsOnOrder)>0
ORDER BY AVG(UnitsOnOrder) DESC

select 'lets try left join IE ALL PRODUCTS showing matching suppliers'
select '1) left join'

SELECT ProductName, CompanyName, *  FROM Products P
LEFT JOIN Suppliers S
ON P.SupplierID = S.SupplierID

SELECT '2) INNER JOIN'
SELECT ProductName, CompanyName, *  FROM Products P
INNER JOIN Suppliers S
ON P.SupplierID = S.SupplierID

SELECT ' FINAL QUERY - CAN WE NOW DO A TRIPLE JOIN ON THE PRODUCT WITH THE SUPPLIER NAME AND CATEGORY NAME'
SELECT 'IE LIST ALL PRODUCTS BY NAME, WITH SUPPLIER AND CATEGORIES'

SELECT ProductName, CompanyName 'COMPANY',  CategoryName 'CATERGORY'  FROM Products P
JOIN Suppliers S
ON P.SupplierID = S.SupplierID
JOIN Categories C
ON P.CategoryID = C.CategoryID


SELECT 'DISCOUNTS'

SELECT * FROM [Order Details]

SELECT * FROM Products


SELECT 'CAN WE LIST TOP TEN ORDERS (TAKE 10) SHOWING THE PRODUCT NAME, UNITPRICE, QUANITY, %DISCOUNT'
SELECT 'ADD ON ODER AMOUNT (PRICE * QUANTITY) AND ABSOLUTE DISCOUNT IE AMOUNT OF DISCOUNT'
SELECT 'FINALLY ADD AMOUNT PAID AFTER DISCOUNT'

SELECT TOP 10 ProductName, OD.UnitPrice, Quantity, Discount FROM [Order Details] OD
JOIN Products P
ON OD.ProductID = P.ProductID


SELECT TOP 10 ProductName, OD.UnitPrice, Quantity, Discount, (OD.Quantity*OD.UnitPrice) AS 'AMOUNT',
(OD.Quantity * OD.UnitPrice* OD.Discount) AS 'ABSOLUTE DISCOUNT',
(OD.Quantity * OD.UnitPrice* (1-OD.Discount)) AS 'AMOUNT PAID AFTER DISCOUNT' 
FROM [Order Details] OD
JOIN Products P
ON OD.ProductID = P.ProductID




SELECT TOP 10 ProductName, OD.UnitPrice, Quantity, Discount, (OD.Quantity*OD.UnitPrice) AS 'AMOUNT',
(OD.Quantity * OD.UnitPrice* OD.Discount) AS 'ABSOLUTE DISCOUNT',
(OD.Quantity * OD.UnitPrice* (1-OD.Discount)) AS 'AMOUNT PAID AFTER DISCOUNT' 
FROM [Order Details] OD
JOIN Products P
ON OD.ProductID = P.ProductID
ORDER BY (OD.Quantity * OD.UnitPrice* OD.Discount) DESC










SELECT ' LETS MOVE ON TO SOME OTHER FEATURES OF SQL'

SELECT 'SUBSTRING (STRING, START INDEX, LENGTH +1)'
SELECT SUBSTRING('THIS IS A STRING', 0,7)
SELECT SUBSTRING('THIS IS A STRING', 6,2)
SELECT SUBSTRING('THIS IS A STRING', 1,7)
SELECT SUBSTRING('THIS IS A STRING', 5,3)
SELECT SUBSTRING('THIS IS A STRING', 0,7)

SELECT 'CHARINDEX'
SELECT 'SAY WE WANT TO FIND THE INDEX OF THE SPACE IN A POSTCODE'
SELECT 'BECAUSE POSTCODE LENGHTS ARE AVAILABLE'
SELECT CHARINDEX('', 'CT23 5EZ') -- RETURN 5 IE 5TH ITEM (STATRTING COUNTING AT 1)
SELECT CHARINDEX('5', 'CT23 5EZ') -- RETURN 6 

SELECT LTRIM( '   DATA         DATA        DATA       ') 
SELECT RTRIM( '   DATA         DATA        DATA       ')

SELECT REPLACE(' THIS IS SOME AMAZING TEXT', 'AMAZING', 'INCREDIBLE')

SELECT UPPER ('hey this is some text')
SELECT LOWER('HEY YOU')

SELECT  -- IF STATEMENT IN SQL
CASE

WHEN (1 = 0) THEN 'STATEMENT IS TRUE'
            ELSE 'STATEMENT IS FALSE'
END




